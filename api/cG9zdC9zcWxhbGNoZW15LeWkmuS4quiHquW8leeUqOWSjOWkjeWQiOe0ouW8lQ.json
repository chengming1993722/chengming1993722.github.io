{"title":"sqlalchemy 多个自引用和复合索引","date":"2019-03-15T02:49:20.000Z","excerpt":"","slug":"sqlalchemy-多个自引用和复合索引","tags":["表结构"],"categories":["SQLALchemy"],"updated":"2019-03-15T07:53:11.656Z","content":"<h2 id=\"sqlalchemy-中的多个以引用关系\"><a href=\"#sqlalchemy-中的多个以引用关系\" class=\"headerlink\" title=\"sqlalchemy 中的多个以引用关系\"></a>sqlalchemy 中的多个以引用关系</h2><pre><code>class Page(Base):\n    __tablename__ = &apos;pages&apos;\n    id          = Column(Integer, primary_key=True)\n    title       = Column(String(100), nullable=False)\n    content     = Column(Text, nullable=False)\n\n    parent_id   = Column(Integer, ForeignKey\n    (&quot;pages.id&quot;), nullable=True)\n    parent      = relationship(&quot;Page&quot;,\n                    primaryjoin=\n                    (&apos;pages.c.id==pages.c.parent_id&apos;),\n                    remote_side=&apos;Page.id&apos;,\n                    backref=backref(&quot;children&quot; ))\n    &apos;&apos;&apos;多个孩子指向父母；\n    子next_id 都是父id；\n    导入数据时孩子指向父母导入\n    &apos;&apos;&apos;\n    next_id     = Column(Integer, ForeignKey\n    (&quot;pages.id&quot;), nullable=True)\n    next        = relationship(&quot;Page&quot;, \n                    primaryjoin=\n                    (&apos;pages.c.next_id==pages.c.id&apos;),\n                    remote_side=&apos;Page.id&apos;, \n                    backref=backref(&quot;prev&quot;, uselist=False))\n</code></pre><h3 id=\"uniqueconstraint-多列唯一\"><a href=\"#uniqueconstraint-多列唯一\" class=\"headerlink\" title=\"uniqueconstraint 多列唯一\"></a>uniqueconstraint 多列唯一</h3><pre><code>uniqueconstraint（&apos;col1&apos;,&apos;col2&apos;）创建唯一组合索引\n</code></pre><p><img src=\"/2019/03/15/sqlalchemy-多个自引用和复合索引/../images/models.jpg\" alt=\"\"></p>\n","prev":{"title":"测试图片","slug":"测试图片"},"next":{"title":"reverseListNode","slug":"reverseListNode"},"link":"/2019/03/15","toc":[{"title":"sqlalchemy 中的多个以引用关系","id":"sqlalchemy-中的多个以引用关系","index":"1","children":[{"title":"uniqueconstraint 多列唯一","id":"uniqueconstraint-多列唯一","index":"1.1"}]}]}